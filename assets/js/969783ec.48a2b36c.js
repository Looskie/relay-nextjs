(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{78:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return u}));var r=t(3),a=t(7),o=(t(0),t(88)),i={title:"Relay App API"},p={unversionedId:"app-api",id:"app-api",isDocsHomePage:!1,title:"Relay App API",description:"relay-nextjs/app is a set of APIs intended for use with a custom App in",source:"@site/docs/app-api.md",slug:"/app-api",permalink:"/relay-nextjs/docs/app-api",editUrl:"https://github.com/RevereCRE/relay-nextjs/edit/main/website/docs/app-api.md",version:"current",sidebar:"docs",previous:{title:"Relay Document API",permalink:"/relay-nextjs/docs/document-api"}},l=[{value:"<code>getInitialPreloadedQuery</code>",id:"getinitialpreloadedquery",children:[{value:"Arguments",id:"arguments",children:[]}]},{value:"<code>getRelayProps</code>",id:"getrelayprops",children:[]}],c={toc:l};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"relay-nextjs/app")," is a set of APIs intended for use with a custom ",Object(o.b)("inlineCode",{parentName:"p"},"App")," in\nNext.js."),Object(o.b)("h2",{id:"getinitialpreloadedquery"},Object(o.b)("inlineCode",{parentName:"h2"},"getInitialPreloadedQuery")),Object(o.b)("p",null,"Returns a\n",Object(o.b)("a",{parentName:"p",href:"https://relay.dev/docs/api-reference/use-preloaded-query"},Object(o.b)("inlineCode",{parentName:"a"},"PreloadedQuery")),"\nrequired for the initial page. Example usage:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-tsx"},"const initialPreloadedQuery = getInitialPreloadedQuery({\n  createClientEnvironment: () => getClientSideEnvironment(),\n});\n")),Object(o.b)("h3",{id:"arguments"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"options"),":",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"options.createClientEnvironment"),": A function that returns a\n",Object(o.b)("inlineCode",{parentName:"li"},"RelayEnvironment"),". Should return the same environment each time it is\ncalled.")))),Object(o.b)("h2",{id:"getrelayprops"},Object(o.b)("inlineCode",{parentName:"h2"},"getRelayProps")),Object(o.b)("p",null,"Creates an object containing props needed to render a page using ",Object(o.b)("inlineCode",{parentName:"p"},"relay-nextjs"),".\nExample usage:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-tsx"},"// src/pages/_app.tsx\nimport { RelayEnvironmentProvider } from 'react-relay/hooks';\nimport { getInitialPreloadedQuery, getRelayProps } from 'relay-nextjs/app';\n\n// This function should return a RelayEnvironment pointed at your GraphQL API.\n// Note that this should always return the same object, **not** create a new\n// RelayEnvironment on every call.\nimport { getClientEnvironment } from '../lib/client_environment';\n\nconst clientEnv = getClientEnvironment();\nconst initialPreloadedQuery = getInitialPreloadedQuery({\n  createClientEnvironment: () => getClientEnvironment()!,\n});\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  const relayProps = getRelayProps(pageProps, initialPreloadedQuery);\n  const env = relayProps.preloadedQuery?.environment ?? clientEnv!;\n\n  return (\n    <>\n      <RelayEnvironmentProvider environment={env}>\n        <Component {...pageProps} {...relayProps} />\n      </RelayEnvironmentProvider>\n    </>\n  );\n}\n\nexport default MyApp;\n")))}u.isMDXComponent=!0},88:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),u=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},s=function(e){var n=u(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=u(t),m=r,b=s["".concat(i,".").concat(m)]||s[m]||d[m]||o;return t?a.a.createElement(b,p(p({ref:n},c),{},{components:t})):a.a.createElement(b,p({ref:n},c))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var c=2;c<o;c++)i[c]=t[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);