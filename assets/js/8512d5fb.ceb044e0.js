"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[596],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),g=a,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||i;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=g;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3291:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={title:"Installation and Setup"},l=void 0,o={unversionedId:"installation-and-setup",id:"installation-and-setup",title:"Installation and Setup",description:"Installing Relay",source:"@site/docs/installation-and-setup.md",sourceDirName:".",slug:"/installation-and-setup",permalink:"/relay-nextjs/docs/installation-and-setup",draft:!1,editUrl:"https://github.com/RevereCRE/relay-nextjs/edit/main/website/docs/installation-and-setup.md",tags:[],version:"current",frontMatter:{title:"Installation and Setup"},sidebar:"docs",previous:{title:"Prerequisites",permalink:"/relay-nextjs/docs/prerequisites"},next:{title:"Configuring relay-nextjs",permalink:"/relay-nextjs/docs/configuration"}},s={},p=[{value:"Installing Relay",id:"installing-relay",level:2},{value:"Configuring Relay",id:"configuring-relay",level:2},{value:"Configuring <code>artifactDirectory</code>",id:"configuring-artifactdirectory",level:3},{value:"Installing Relay Compiler",id:"installing-relay-compiler",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"installing-relay"},"Installing Relay"),(0,a.kt)("p",null,"Relay comes with quite a number of dependencies that don't involve Next.js.\nWe'll set those up first before moving on to ",(0,a.kt)("inlineCode",{parentName:"p"},"relay-nextjs"),"."),(0,a.kt)("p",null,"First install Relay's runtime dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install react-relay relay-runtime\n")),(0,a.kt)("p",null,"TypeScript users should install appropriate ",(0,a.kt)("inlineCode",{parentName:"p"},"@types")," packages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install --save-dev @types/react-relay @types/relay-runtime\n")),(0,a.kt)("h2",{id:"configuring-relay"},"Configuring Relay"),(0,a.kt)("p",null,"Install ",(0,a.kt)("inlineCode",{parentName:"p"},"relay-config")," to provide a single configuration file to the rest of\nRelay:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install --save-dev relay-config\n")),(0,a.kt)("p",null,"Create ",(0,a.kt)("inlineCode",{parentName:"p"},"relay.config.js"),". For Next.js projects using TypeScript this should look\nsomething like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  src: './src',\n  schema: './src/schema/__generated__/schema.graphql',\n  exclude: ['**/node_modules/**', '**/__mocks__/**', '**/__generated__/**'],\n  extensions: ['ts', 'tsx'],\n  language: 'typescript',\n  artifactDirectory: 'src/queries/__generated__',\n};\n")),(0,a.kt)("h3",{id:"configuring-artifactdirectory"},"Configuring ",(0,a.kt)("inlineCode",{parentName:"h3"},"artifactDirectory")),(0,a.kt)("p",null,"Next.js's ",(0,a.kt)("inlineCode",{parentName:"p"},"/pages")," directory cannot include non-React components as default\nexport."),(0,a.kt)("p",null,"By default, the relay-compiler generates ",(0,a.kt)("inlineCode",{parentName:"p"},"*.graphql.ts")," files that are\nco-located with the corresponding files containing graphql tags. To fix this\nconfigure ",(0,a.kt)("inlineCode",{parentName:"p"},"artifactDirectory")," to emit to ",(0,a.kt)("inlineCode",{parentName:"p"},"src/queries/__generated__"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js:relay.config.js"},"module.exports = {\n  // ...\n  artifactDirectory: 'src/queries/__generated__',\n}\n")),(0,a.kt)("p",null,"For more information please see the Relay\n",(0,a.kt)("a",{parentName:"p",href:"https://relay.dev/docs/guides/type-emission/#single-artifact-directory"},"type emission documentation"),".\nAlternatively you can keep ",(0,a.kt)("inlineCode",{parentName:"p"},"*.graphql.ts")," files in ",(0,a.kt)("inlineCode",{parentName:"p"},"/pages")," directory with\n",(0,a.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/api-reference/next.config.js/custom-page-extensions"},(0,a.kt)("inlineCode",{parentName:"a"},"pageExtensions")),"."),(0,a.kt)("h2",{id:"installing-relay-compiler"},"Installing Relay Compiler"),(0,a.kt)("p",null,"The Relay Compiler statically analyzes and optimizes GraphQL queries in your\napplication. To install the dependencies run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install --save-dev relay-compiler relay-compiler-language-typescript babel-plugin-relay graphql\n")),(0,a.kt)("p",null,"For convenience create a ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," to run the compiler:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "generate:relay": "relay-compiler"\n  }\n}\n')),(0,a.kt)("p",null,"Then configure Babel to compile away ",(0,a.kt)("inlineCode",{parentName:"p"},"graphql")," strings:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".babelrc"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "presets": ["next/babel"],\n  "plugins": ["relay"]\n}\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"relay-nextjs")," is designed to run on both the server and client. To avoid\npulling in server dependencies to the client bundle configure Webpack to ignore\nany files in ",(0,a.kt)("inlineCode",{parentName:"p"},"src/lib/server"),". In ",(0,a.kt)("inlineCode",{parentName:"p"},"next.config.js"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const webpack = require("webpack");\n\n//...\n\nmodule.exports = {\n  webpack: (config, { isServer, webpack }) => {\n    if (!isServer) {\n      // Ensures no server modules are included on the client.\n      config.plugins.push(\n        new webpack.IgnorePlugin({ resourceRegExp: /lib\\/server/ })\n      );\n    }\n\n    return config;\n  },\n};\n')),(0,a.kt)("p",null,"If your path to server-only files is different please adjust the above RegExp\nproperly."))}d.isMDXComponent=!0}}]);