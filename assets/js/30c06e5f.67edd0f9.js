(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{75:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return u})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return d}));var r=t(3),a=t(7),o=(t(0),t(88)),i={title:"Lazy-loaded Queries"},u={unversionedId:"lazy-loaded-query",id:"lazy-loaded-query",isDocsHomePage:!1,title:"Lazy-loaded Queries",description:"Relay's",source:"@site/docs/lazy-loaded-query.md",slug:"/lazy-loaded-query",permalink:"/relay-nextjs/docs/lazy-loaded-query",editUrl:"https://github.com/RevereCRE/relay-nextjs/edit/main/website/docs/lazy-loaded-query.md",version:"current",sidebar:"docs",previous:{title:"Configuring relay-nextjs",permalink:"/relay-nextjs/docs/configuration"},next:{title:"Relay Page API",permalink:"/relay-nextjs/docs/page-api"}},s=[],c={toc:s};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Relay's\n",Object(o.b)("a",{parentName:"p",href:"https://relay.dev/docs/api-reference/use-lazy-load-query/"},Object(o.b)("inlineCode",{parentName:"a"},"useLazyLoadQuery")," API"),"\nlet us defer loading queries until a component is mounted. To render a loading\nstate while the query is pending the docs recommended adding a ",Object(o.b)("inlineCode",{parentName:"p"},"<Suspense>"),"\nboundary. Next.js and ",Object(o.b)("inlineCode",{parentName:"p"},"relay-nextjs")," both expect to be able to render on the\nserver and as of the time of writing React Suspense does not support server\nrendering. When using ",Object(o.b)("inlineCode",{parentName:"p"},"withRelay")," and ",Object(o.b)("inlineCode",{parentName:"p"},"usePreloadedQuery")," we take care of adding\nthe ",Object(o.b)("inlineCode",{parentName:"p"},"<Suspense>")," boundary for you but we cannot here."),Object(o.b)("p",null,"To use ",Object(o.b)("inlineCode",{parentName:"p"},"useLazyLoadQuery")," and render a ",Object(o.b)("inlineCode",{parentName:"p"},"<Suspense>")," boundary you must create a\ndynamically rendered component that skips SSR. For example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-tsx"},"// src/components/user_stats.tsx\nimport type { userStats_Birthday } from 'queries/__generated__/userStats_Birthday.graphql';\nimport React, { Suspense, useCallback } from 'react';\nimport { graphql, useLazyLoadQuery } from 'react-relay';\n\nfunction UserBirthday({ uuid }: { uuid: string }) {\n  const query = useLazyLoadQuery<userStats_Birthday>(\n    graphql`\n      query userStats_Birthday($uuid: ID!) {\n        user(id: $uuid) {\n          birthday\n        }\n      }\n    `,\n    { uuid }\n  );\n\n  return <div>Birthday is {query.user.birthday}!</div>;\n}\n\nfunction UserStats({ uuid }: { uuid: string }) {\n  return (\n    <Suspense fallback=\"Loading...\">\n      <UserBirthday uuid={uuid} />\n    </Suspense>\n  );\n}\n\nexport default UserStats;\n")),Object(o.b)("p",null,"Note that we have two components here: one that has a ",Object(o.b)("inlineCode",{parentName:"p"},"<Suspense>")," boundary and\none that actually calls ",Object(o.b)("inlineCode",{parentName:"p"},"useLazyLoadQuery"),". If these two were merged into the\nsame component there would be no boundary to catch ",Object(o.b)("inlineCode",{parentName:"p"},"useLazyLoadQuery"),"\nsuspending!"),Object(o.b)("p",null,"To render this component use the\n",Object(o.b)("a",{parentName:"p",href:"https://nextjs.org/docs/advanced-features/dynamic-import"},"Next.js ",Object(o.b)("inlineCode",{parentName:"a"},"dynamic")," API"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-tsx"},"// src/pages/user_profile.tsx\nimport dynamic from 'next/dynamic';\n\nconst UserStats = dynamic(() => import('components/components/user_stats'), {\n  ssr: false,\n});\n\nfunction UserProfile({ uuid }: { uuid: string }) {\n  return (\n    <div>\n      {/* ... */}\n      <UserStats uuid={uuid} />\n    </div>\n  );\n}\n")))}d.isMDXComponent=!0},88:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),d=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},p=function(e){var n=d(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},y=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),y=r,b=p["".concat(i,".").concat(y)]||p[y]||l[y]||o;return t?a.a.createElement(b,u(u({ref:n},c),{},{components:t})):a.a.createElement(b,u({ref:n},c))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=y;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var c=2;c<o;c++)i[c]=t[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}y.displayName="MDXCreateElement"}}]);